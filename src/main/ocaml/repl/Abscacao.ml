(* OCaml module generated by the BNF converter *)


type uIdent = UIdent of string
and lIdent = LIdent of string
and wild = Wild of string
and expr =
   Sequence of expr * expr
 | Application of expr * expr list
 | Supposition of pattern * expr * expr
 | Recurrence of pattern * expr * expr
 | Abstraction of pattern * expr
 | Condition of expr * expr * expr
 | Comprehension of binding list * expr
 | Consolidation of binding list * expr
 | Filtration of binding list * pattern list * expr
 | Concentration of binding list * pattern list * expr
 | Equation of expr * expr
 | ComparisonLT of expr * expr
 | ComparisonGT of expr * expr
 | ComparisonLTE of expr * expr
 | ComparisonGTE of expr * expr
 | Reflection of variation
 | Acquisition
 | Suspension of expr * expr
 | Release of expr * expr
 | InnerSuspension of expr * expr
 | Calculation of arithmeticExpr

and arithmeticExpr =
   Division of arithmeticExpr * arithmeticExpr
 | Addition of arithmeticExpr * arithmeticExpr
 | Multiplication of arithmeticExpr * arithmeticExpr
 | Juxtaposition of arithmeticExpr * arithmeticExpr
 | Negation of arithmeticExpr
 | Mention of variation
 | Actualization of value
 | Aggregation of expr

and binding =
   Question of pattern * expr

and pattern =
   Element of symbol * pattern list
 | Variable of variation
 | Materialization of value
 | Procession of lyst
 | PtnSequence of variation
 | PtnApplication of variation * variation
 | PtnSupposition of variation * variation * variation
 | PtnRecurrence of variation * variation * variation
 | PtnAbstraction of variation * variation
 | PtnCondition of variation * variation * variation
 | PtnComprehend of variation * variation
 | PtnConsolidate of variation * variation
 | PtnFiltration of variation * variation * variation
 | PtnConcentrate of variation * variation * variation
 | PtnEquation of variation * variation
 | PtnCompLT of variation * variation
 | PtnCompGT of variation * variation
 | PtnCompLTE of variation * variation
 | PtnCompGTE of variation * variation
 | PtnReflection of variation * variation
 | PtnAcquisition
 | PtnSuspension of variation * variation
 | PtnRelease of variation * variation
 | PtnInnerSuspend of variation * variation
 | PtnDivision of variation * variation
 | PtnAddition of variation * variation
 | PtnMultiply of variation * variation
 | PtnJuxtapose of variation * variation
 | PtnNegate of variation * variation

and variation =
   Atomic of uIdent
 | Abandon of wild
 | Transcription of expr

and lyst =
   Empty
 | Enum of pattern list
 | Cons of pattern list * lyst
 | ConsV of pattern list * variation

and value =
   BooleanLiteral of duality
 | StringLiteral of string
 | IntegerLiteral of int
 | DoubleLiteral of float
 | Reification of expr

and duality =
   Verity
 | Absurdity

and symbol =
   Tag of lIdent

